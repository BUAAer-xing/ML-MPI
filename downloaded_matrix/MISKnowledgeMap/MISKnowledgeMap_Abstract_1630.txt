The model-driven architecture enables the deployment of software applications on different platforms. It is based on a pattern in which a platform-independent model is transformed into a platform-specific model, given a platform model (PM). Currently, the model transformations used for this task implicitly assume this PM, which makes it unclear whether a model transformation can be used for platforms other than the one assumed. In order to target very specific platforms and platform variants, model transformations must be reusable beyond their assumed platform. We propose an explicit PM that can be used to reason about platform dependencies of model transformations and their applicability to specific platforms. In addition, we show how PMs can be integrated in a model-driven configuration management framework.
